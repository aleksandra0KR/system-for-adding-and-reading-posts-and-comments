// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/google/uuid"
)

type Comment struct {
	CommentID uuid.UUID  `json:"CommentId"`
	Body      string     `json:"Body"`
	UserID    uuid.UUID  `json:"UserId"`
	CreatedAt time.Time  `json:"CreatedAt"`
	UpdatedAt *time.Time `json:"UpdatedAt,omitempty"`
	Parent    *Comment   `json:"Parent,omitempty"`
	Children  []*Comment `json:"Children,omitempty"`
	Post      *Post      `json:"Post"`
}

type Mutation struct {
}

type NewComment struct {
	Body      string     `json:"Body"`
	UserID    uuid.UUID  `json:"UserId"`
	CreatedAt time.Time  `json:"CreatedAt"`
	ParentID  *uuid.UUID `json:"ParentId,omitempty"`
	PostID    uuid.UUID  `json:"PostId"`
}

type NewPost struct {
	Title            string    `json:"Title"`
	Body             string    `json:"Body"`
	UserID           uuid.UUID `json:"UserId"`
	DisabledComments bool      `json:"DisabledComments"`
	CreatedAt        time.Time `json:"CreatedAt"`
}

type Post struct {
	PostID           uuid.UUID  `json:"PostId"`
	Title            string     `json:"Title"`
	Body             string     `json:"Body"`
	UserID           uuid.UUID  `json:"UserId"`
	Comments         []*Comment `json:"Comments,omitempty"`
	DisabledComments bool       `json:"DisabledComments"`
	CreatedAt        time.Time  `json:"CreatedAt"`
	UpdatedAt        *time.Time `json:"UpdatedAt,omitempty"`
}

type Query struct {
}

type Subscription struct {
}

type UpdateComment struct {
	Body      string    `json:"Body"`
	UpdatedAt time.Time `json:"UpdatedAt"`
}

type UpdatePost struct {
	PostID           uuid.UUID `json:"PostId"`
	Title            string    `json:"Title"`
	Body             string    `json:"Body"`
	UserID           uuid.UUID `json:"UserId"`
	DisabledComments bool      `json:"DisabledComments"`
	UpdatedAt        time.Time `json:"UpdatedAt"`
}

type User struct {
	UserID   uuid.UUID  `json:"UserId"`
	Posts    []*Post    `json:"Posts,omitempty"`
	Comments []*Comment `json:"Comments,omitempty"`
}
