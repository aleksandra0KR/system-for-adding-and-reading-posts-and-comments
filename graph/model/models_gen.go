// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/google/uuid"
)

type Comment struct {
	ID       uuid.UUID  `json:"id"`
	Body     string     `json:"body"`
	UserID   uuid.UUID  `json:"userId"`
	Parent   *uuid.UUID `json:"parent,omitempty"`
	Children []*Comment `json:"children,omitempty"`
	Post     uuid.UUID  `json:"post"`
}

type Mutation struct {
}

type NewComment struct {
	Body     string     `json:"body"`
	UserID   uuid.UUID  `json:"userId"`
	ParentID *uuid.UUID `json:"parentId,omitempty"`
	PostID   uuid.UUID  `json:"postId"`
}

type NewPost struct {
	Title    string    `json:"title"`
	Body     string    `json:"body"`
	UserID   uuid.UUID `json:"userId"`
	Disabled bool      `json:"disabled"`
}

type NewUser struct {
	Name string `json:"name"`
}

type Post struct {
	ID       uuid.UUID  `json:"id"`
	Title    string     `json:"title"`
	Body     string     `json:"body"`
	UserID   uuid.UUID  `json:"userId"`
	Comments []*Comment `json:"comments,omitempty"`
	Disabled bool       `json:"disabled"`
}

type Query struct {
}

type Subscription struct {
}

type UpdateComment struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

type UpdatePost struct {
	ID       uuid.UUID `json:"id"`
	Title    string    `json:"title"`
	Body     string    `json:"body"`
	UserID   uuid.UUID `json:"userId"`
	Disabled bool      `json:"disabled"`
}

type User struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}
